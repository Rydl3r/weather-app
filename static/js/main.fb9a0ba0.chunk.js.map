{"version":3,"sources":["WeatherSide.js","TodayInfo.js","WeekInfo.js","App.js","index.js"],"names":["WeatherSide","city","weather","string","today","Date","toISOString","slice","dateObj","weekday","toLocaleString","charAt","toUpperCase","imgLink","icon","className","style","width","src","main","temp","description","todayInfo","wind","deg","speed","humidity","WeekInfo","iconStyle","color","fontSize","textAlign","marginLeft","clouds","all","pressure","visibility","App","useState","setWeather","setCity","tempCity","setTempCity","fetchWeather","a","fetch","response","json","data","console","log","useEffect","TodayInfo","onSubmit","e","preventDefault","placeholder","value","onChange","target","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb9a0ba0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst WeatherSide = ({city, weather}) => {\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    let today = new Date().toISOString().slice(0, 10)\r\n    let dateObj = new Date()\r\n    let weekday = capitalizeFirstLetter(dateObj.toLocaleString(\"default\", { weekday: \"long\" }))\r\n    let imgLink = `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`\r\n    const imgStyle = {  width: \"100px\" }\r\n       \r\n    return (\r\n        <div className=\"weather-side\">\r\n        <div className=\"weather-gradient\"></div>\r\n        <div className=\"date-container\">\r\n          <h2 className=\"date-dayname\">{weekday}</h2> <span className=\"date-day\">{today}</span><i className=\"location-icon\" data-feather=\"map-pin\"></i><span className=\"location\">{city}</span> </div>\r\n        <div className=\"weather-container\"> <i className=\"weather-icon\" data-feather=\"sun\"></i>\r\n          <img style={imgStyle} src={imgLink}/>\r\n          <h1 className=\"weather-temp\">{weather.main.temp}</h1>\r\n          <h3 className=\"weather-desc\">{weather.weather[0].description}</h3> </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default WeatherSide\r\n","import React from 'react'\r\n\r\nconst todayInfo = ({weather}) => {\r\n    return (\r\n        <div className=\"today-info-container\">\r\n          <div className=\"today-info\">\r\n            <div className=\"precipitation\"> <span className=\"title\">WIND TEMPERATURE</span><span className=\"value\">{weather.wind.deg} deg</span>\r\n              <div className=\"clear\"></div>\r\n            </div>\r\n            <div className=\"wind\"> <span className=\"title\">WIND SPEED</span><span className=\"value\">{weather.wind.speed} km/h</span>\r\n              <div className=\"clear\"></div>\r\n            </div>\r\n            <div className=\"humidity\"> <span className=\"title\">HUMIDITY</span><span className=\"value\">{weather.main.humidity}</span>\r\n              <div className=\"clear\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default todayInfo\r\n","import React from 'react'\r\nimport { WiCloud, WiSmallCraftAdvisory, WiStrongWind, WiTime12 } from \"react-icons/wi\";\r\n\r\nconst WeekInfo = ({weather}) => {\r\n    const iconStyle = { color: \"white\", fontSize: \"24px\", textAlign:\"center\", marginLeft: \"10px\" }\r\n\r\n    return (\r\n        <div className=\"week-container\">\r\n          <ul className=\"week-list\">\r\n            <li><WiCloud style={iconStyle}/><span className=\"day-name\">Clouds</span><span className=\"day-temp\">{weather.clouds.all}</span></li>\r\n            <li><WiTime12 style={iconStyle}/><span className=\"day-name\">Press</span><span className=\"day-temp\">{weather.main.pressure}</span></li>\r\n            <li><WiSmallCraftAdvisory style={iconStyle}/><span className=\"day-name\">Visib</span><span className=\"day-temp\">{weather.visibility}</span></li>\r\n            <li><WiStrongWind style={iconStyle}/><span className=\"day-name\">Wind</span><span className=\"day-temp\">{weather.wind.speed}</span></li>\r\n            <div className=\"clear\"></div>\r\n          </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekInfo\r\n","import {useState, useEffect} from 'react'\nimport WeatherSide from './WeatherSide'\nimport TodayInfo from './TodayInfo'\nimport WeekInfo from './WeekInfo'\n\nfunction App() {\n  const [weather, setWeather] = useState({\"coord\":{\"lon\":-0.1257,\"lat\":51.5085},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"broken clouds\",\"icon\":\"04d\"}],\"base\":\"stations\",\"main\":{\"temp\":20.46,\"feels_like\":20.23,\"temp_min\":18.53,\"temp_max\":22.4,\"pressure\":1006,\"humidity\":64},\"visibility\":10000,\"wind\":{\"speed\":5.66,\"deg\":150},\"clouds\":{\"all\":75},\"dt\":1628164746,\"sys\":{\"type\":2,\"id\":2019646,\"country\":\"GB\",\"sunrise\":1628137828,\"sunset\":1628192550},\"timezone\":3600,\"id\":2643743,\"name\":\"London\",\"cod\":200})\n  const [city, setCity] = useState(\"London\")\n  const [tempCity, setTempCity] = useState(\"London\")\n\n  const fetchWeather = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=473d1ee43c0e104fb437f7a5e0e8ecd4&units=metric`)\n    setTempCity(city)\n    setCity(\"\")\n    const data = await response.json()\n    setWeather(data)\n    console.log(weather)\n    \n  }\n\n  useEffect(() => {\n    fetchWeather()\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n    <div className=\"container\">\n      <WeatherSide city={tempCity} weather={weather}/>\n      <div className=\"info-side\">\n        <TodayInfo weather={weather}/>\n        <WeekInfo weather={weather}/>\n        <form className=\"location_selector\" onSubmit={(e) => {e.preventDefault()}}>\n          <input className=\"location_input\" placeholder=\"Type your city...\" value={city} onChange={(e)=> setCity(e.target.value)}/>\n          <button className=\"getWeatherBtn\" onClick={fetchWeather}>Get Weather</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}